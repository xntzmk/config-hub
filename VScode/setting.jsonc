{
  "json.format.keepLines": true,
  "security.workspace.trust.untrustedFiles": "open",

  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,

  "window.title": "${rootNameShort}",
  "window.commandCenter": false,
  "window.menuBarVisibility": "hidden",
  // "window.zoomLevel": 0.7,

  /** -------- Workbench -------- */
  "workbench.tree.indent": 15,
  "workbench.list.smoothScrolling": true,
  "workbench.editor.limit.enabled": true,
  "workbench.editor.limit.value": 7,
  "workbench.editor.limit.perEditorGroup": true,
  "workbench.startupEditor": "welcomePageInEmptyWorkbench",
  "workbench.editor.closeOnFileDelete": true,
  "workbench.editor.tabActionCloseVisibility": false,

  // theme setup
  "sundial.sunset": "17:30",
  "workbench.productIconTheme": "icons-carbon",
  "workbench.iconTheme": "catppuccin-mocha",
  "workbench.colorTheme": "GitHub Plus",
  "workbench.preferredLightColorTheme": "GitHub Plus",
  "workbench.preferredDarkColorTheme": "GitHub Plus",
  "workbench.colorCustomizations": {
    "[GitHub Plus]": {
      "sideBar.background": "#fdfdfe",
      "editor.background": "#fdfdfe",
      "editorBracketHighlight.foreground1": "#86cdfc",
      "editorBracketHighlight.foreground2": "#ebba60",
      "editorBracketHighlight.foreground3": "#e469b4",
      "editorBracketHighlight.foreground4": "#92dfd2"
    },
  },


  /** -------- Editor -------- */
  "editor.tabSize": 2,
  "editor.fontSize": 14,
  "editor.fontWeight": "500",
  "editor.lineNumbers": "relative",
  "editor.fontFamily": "MonoLisa, Maple Hand, LXGW WenKai Mono",
  "editor.fontLigatures": false,
  "editor.linkedEditing": false, // 不知道啥东西
  "editor.minimap.enabled": false,
  "editor.detectIndentation": false,
  "editor.formatOnSave": true,
  // "editor.renderWhitespace": "none",
  "editor.codeActionsOnSave": {
    "source.fixAll": "explicit",
    "source.fixAll.eslint": "explicit",
    "source.organizeImports": "never",
  },
  "editor.occurrencesHighlight": "multiFile",
  "editor.find.addExtraSpaceOnTop": false,
  "editor.bracketPairColorization.enabled": true,
  "editor.codeActionWidget.includeNearbyQuickFixes": true,
  "editor.guides.bracketPairs": "active",
  "editor.hover.sticky": true,
  "editor.stickyScroll.enabled": true,
  "editor.smoothScrolling": true,
  "editor.cursorBlinking": "blink",
  "editor.cursorSmoothCaretAnimation": "on",

  // suggest
  "editor.suggest.preview": true,
  "editor.suggestSelection": "first",
  "editor.suggest.insertMode": "insert",
  "editor.snippetSuggestions": "inline",
  "editor.suggest.localityBonus": true,
  "editor.acceptSuggestionOnCommitCharacter": false,
  "editor.suggest.snippetsPreventQuickSuggestions": false,

  // theme setup
  "editor.semanticTokenColorCustomizations": { },
  "editor.tokenColorCustomizations": {
    "textMateRules": [
      {
        "name": "comment",
        "scope": [ "comment.line.double-slash", "comment.block.documentation" ],
        "settings": { "fontStyle": "italic" }
      },
      {
        "scope": [ "storage.type.function" ],
        "settings": { "fontStyle": "italic" }
      },
    ],

    "[GitHub Plus]": {
      "textMateRules": [
        {
          "scope": [ "storage.type.function" ],
          "settings": { "foreground": "#ff808b" }
        },
        {
          "scope": [ "keyword.control.trycatch", "variable.language.this" ],
          "settings": { "foreground": "#42a5f5" }
        },
        {
          "scope": [
            "keyword.control.export",
            "keyword.control.import",
            "keyword.control.default",
            "keyword.control.from",
            "keyword.control.flow",
            "storage.modifier",
            "storage.type.class",
          ],
          "settings": { "fontStyle": "italic" }
        },
        {
          "name": "function parameter",
          "scope": [
            "entity.name.variable.parameter",
            "meta.at-rule.function variable",
            "meta.at-rule.mixin variable",
            "meta.function.arguments variable.other.php",
            "meta.selectionset.graphql meta.arguments.graphql variable.arguments.graphql",
            "variable.parameter",
          ],
          "settings": { "fontStyle": "italic", "foreground": "#3a99aa" }
        },
        {
          "name": "JSDoc-Style comment parameters",
          "scope": [ "comment.block.documentation variable" ],
          "settings": { "fontStyle": "italic", "foreground": "#3a99aa" }
        },
        {
          "name": "Destructuring / aliasing reference name (LHS)",
          "scope": [
            "meta.import variable.other.readwrite",
            "meta.variable.assignment.destructured.object.coffee variable"
          ],
          "settings": { "foreground": "#3a99aa" }
        },
      ]
    }
  },

  "search.exclude": {
    "**/.git": true,
    "**/.github": true,
    "**/.nuxt": true,
    "**/.output": true,
    "**/.pnpm": true,
    "**/.vscode": true,
    "**/.yarn": true,
    "**/bower_components": true,
    "**/dist/**": true,
    "**/logs": true,
    "**/out/**": true,
    "**/package-lock.json": true,
    "**/pnpm-lock.yaml": true,
    "**/tmp": true,
    "**/yarn.lock": true
  },

  /** -------- Terminal -------- */
  "terminal.external.windowsExec": "C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\powershell.exe",
  "terminal.integrated.defaultProfile.windows": "Git Bash",
  "terminal.integrated.fontSize": 14,
  "terminal.integrated.fontWeight": "400",
  "terminal.integrated.fontFamily": "ComicShannsMono Nerd Font Mono, LXGW WenKai Mono",
  "terminal.integrated.cursorBlinking": true,
  "terminal.integrated.tabs.enabled": true,
  "terminal.integrated.splitCwd": "initial", // 防止拆分终端失败
  "terminal.integrated.enableMultiLinePasteWarning": "never",
  "terminal.integrated.persistentSessionReviveProcess": "never",

  /** -------- Git -------- */
  "git.autofetch": true,
  "git.confirmSync": false,
  "git.enableSmartCommit": true,

  /** -------- Vim -------- */
  "vim.foldfix": true,
  "vim.hlsearch": true,
  "vim.leader": "<Space>",
  "vim.useCtrlKeys": false,
  "vim.useSystemClipboard": true,

  "vim.operatorPendingModeKeyBindings": [
    { "before": [ "H" ], "after": [ "^" ] },
    { "before": [ "L" ], "after": [ "g", "_" ] },
  ],

  "vim.normalModeKeyBindingsNonRecursive": [
    { "before": [ "H" ], "after": [ "^" ] },
    { "before": [ "L" ], "after": [ "g", "_" ] },
    { "before": [ "J" ], "after": [ "5", "j" ] },
    { "before": [ "K" ], "after": [ "5", "k" ] },

    { "before": [ "n" ], "after": [ "n", "z", "z" ] },
    { "before": [ "N" ], "after": [ "N", "z", "z" ] },

    // 当前行复制粘贴
    { "before": [ "c", "p" ], "after": [ "y", "y", "p" ] },

    // 单词添加引号 
    { "before": [ "'", "'" ], "after": [ "v", "i", "w", "S", "'", "e", "l" ] },
    { "before": [ "'", "\"" ], "after": [ "v", "i", "w", "S", "\"", "e", "l" ] },

    // 大小写
    { "before": [ "g", "u" ], "after": [ "v", "i", "w", "g", "u" ] },
    { "before": [ "<leader>", "u" ], "after": [ "v", "i", "w", "g", "U" ] },

    // 快速跳转 
    { "before": [ "m" ], "after": [ "m", "m" ] },
    { "before": [ "<leader>", "m" ], "after": [ "'", "m" ] },

    // 保存
    { "before": [ "<leader>", "s" ], "commands": [ "editor.action.formatDocument", "workbench.action.files.save" ] },
    { "before": [ "<leader>", "w" ], "commands": [ "workbench.action.files.saveWithoutFormatting" ] },

    // 切换布尔值
    { "before": [ "<leader>", "i" ], "commands": [ "extension.toggleBool" ] },

    // 快速粘贴
    { "before": [ "<leader>", "p" ], "after": [ "v", "i", "w", "p", "g", "v", "y" ] },
  ],

  "vim.visualModeKeyBindingsNonRecursive": [
    { "before": [ "H" ], "after": [ "^" ] },
    { "before": [ "L" ], "after": [ "g", "_" ] },
    { "before": [ "J" ], "after": [ "5", "j" ] },
    { "before": [ "K" ], "after": [ "5", "k" ] },
    { "before": [ "y" ], "after": [ "y", "g", "v", "<esc>" ] }, // 在可视化模式下 y 之后光标停到当前的位置
    { "before": [ "p" ], "after": [ "p", "g", "v", "y" ] }, // 防止 p 之后寄存器被覆盖
  ],

  /** -------- Eslint https://github.com/antfu/eslint-config -------- */
  "eslint.quiet": true,
  "eslint.useFlatConfig": true,
  "eslint.codeAction.showDocumentation": { "enable": true },
  "eslint.validate": [ "javascript", "typescript", "javascriptreact", "typescriptreact", "vue", "html", "markdown", "json", "jsonc" ],

  /** -------- Markdown -------- */
  "[markdown]": {
    "editor.wordWrap": "off",
    "editor.formatOnSave": true,
    "editor.quickSuggestions": { "comments": "on", "strings": "on", "other": "on" },
    "diffEditor.ignoreTrimWhitespace": false,
  },
  "editor.defaultFormatter": "yzhang.markdown-all-in-one",
  "markdown-preview-enhanced.codeBlockTheme": "vue.css",

  /** -------- Extensions -------- */
  "errorLens.enabledDiagnosticLevels": [ "warning", "error" ],
  "errorLens.excludeBySource": [ "cSpell", "eslint" ],

  // custom_css
  "vscode_custom_css.imports": [ "file:///D:/Microsoft VS Code Custom/index.css" ],

  "cSpell.language": "en,en-US",
  "cSpell.spellCheckOnlyWorkspaceFiles": true,
  "cSpell.userWords": [ "xntzmk" ],

  "vue.autoInsert.bracketSpacing": true,
  "vue.autoInsert.dotValue": true,
  "vue.complete.casing.props": "autoCamel",

  // File Nesting
  "explorer.fileNesting.expand": false,
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.patterns": {
    "README*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, README-*, README_*, RELEASE_NOTES*, Readme-*, Readme_*, Release_Notes*, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, readme-*, readme_*, release_notes*, security.md, sponsors*",
    ".env": "*.env, .env.*, .envrc, env.d.ts",
    ".project": ".classpath",
    ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
    "shims.d.ts": "*.d.ts",
    "package.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitmojirc.json, .gitpod*, .huskyrc*, .jslint*, .knip.*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .pylintrc, .release-please*.json, .releaserc*, .ruff.toml, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, biome.json*, bower.json, build.config.*, bun.lockb, bunfig.toml, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json*, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, knip.*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-please*.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, ruff.toml, simple-git-hooks*, sonar-project.properties, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, wrangler.toml, xo.config.*, yarn*",
    "app.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .nuxtignore, .nuxtrc, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "next.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, next-env.d.ts, next-i18next.config.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "astro.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "svelte.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, houdini.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, mdsvex.config.js, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vite.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "+page.svelte": "+page.server.ts,+page.server.js,+page.ts,+page.js,+page.gql",
    "+layout.svelte": "+layout.ts,+layout.ts,+layout.js,+layout.server.ts,+layout.server.js,+layout.gql",
    "*.css": "$(capture).css.map, $(capture).*.css",
    "*.mjs": "$(capture).mjs.map, $(capture).*.mjs, $(capture)_*.mjs",
  },
}